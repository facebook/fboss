load("@fbcode_macros//build_defs:cpp_binary.bzl", "cpp_binary")
load("@fbcode_macros//build_defs:cpp_library.bzl", "cpp_library")
load("//fboss:THIRD-PARTY-VERSIONS.bzl", "BCM_SDKS", "to_impl_suffix", "to_versions")
load(
    "//fboss/agent/test/link_tests:link_tests.bzl",
    "all_sai_link_test_binaries",
)

oncall("fboss_agent_push")

cpp_library(
    name = "link_tests",
    srcs = [
        "DependencyTest.cpp",
        "EmptyLinkTest.cpp",
        "LacpSanityTests.cpp",
        "LinkSanityTests.cpp",
        "LinkTest.cpp",
        "LinkTestUtils.cpp",
        "MacLearningTests.cpp",
        "OpenBmcUpgradeTests.cpp",
        "OpticsTest.cpp",
        "PhyInfoTest.cpp",
        "PrbsTest.cpp",
        "PtpTests.cpp",
        "SpeedChangeTest.cpp",
        "facebook/FsdbTests.cpp",
        "facebook/MacsecFsdbTests.cpp",
        "facebook/MacsecSanityTests.cpp",
        "facebook/MacsecSessionTests.cpp",
        "facebook/MacsecStatTests.cpp",
        "facebook/MacsecTest.cpp",
        "facebook/QsfpFsdbTests.cpp",
    ],
    link_whole = True,
    # Will need symbols from bcm, sai layers. Those
    # will come when we build bcm/sai link test bins
    undefined_symbols = True,
    exported_deps = [
        "fbsource//third-party/googletest:gtest",
        "//common/process:process",
        "//fboss/agent:agent_stats-cpp2-types",
        "//fboss/agent:core",
        "//fboss/agent:fboss-error",
        "//fboss/agent:fboss-types",
        "//fboss/agent:load_agent_config",
        "//fboss/agent:main-common",
        "//fboss/agent:platform_base",
        "//fboss/agent/hw:hardware_stats-cpp2-types",
        "//fboss/agent/hw:hw_switch_warmboot_helper",
        "//fboss/agent/hw/switch_asics:switch_asics",
        "//fboss/agent/hw/test:config_factory",
        "//fboss/agent/hw/test:hw_packet_utils",
        "//fboss/agent/hw/test:hw_qos_utils",
        "//fboss/agent/hw/test:hw_test_ecmp_utils",
        "//fboss/agent/hw/test:hw_test_fabric_utils",
        "//fboss/agent/hw/test:hw_test_port_utils",
        "//fboss/agent/hw/test:load_balancer_utils",
        "//fboss/agent/packet:packet",
        "//fboss/agent/packet:pktutil",
        "//fboss/agent/platforms/common:platform_mapping",
        "//fboss/agent/state:state",
        "//fboss/agent/state:state_utils",
        "//fboss/agent/test:agent_test",
        "//fboss/agent/test:ecmp_helper",
        "//fboss/agent/test:resourcelibutil",
        "//fboss/agent/test:trunk_utils",
        "//fboss/agent/test:utils",
        "//fboss/agent/test/utils:copp_test_utils",
        "//fboss/agent/test/utils:packet_snooper",
        "//fboss/agent/test/utils:pkt_test_utils",
        "//fboss/agent/test/utils:port_test_utils",
        "//fboss/agent/test/utils:qos_test_utils",
        "//fboss/agent/test/utils:trap_packet_utils",
        "//fboss/facebook/mka_service/fsdb/tests:MKAFsdbTestUtils",
        "//fboss/facebook/mka_service/mka_module:mka_structs",
        "//fboss/fsdb/client:fsdb_pub_sub",
        "//fboss/fsdb/common:flags",
        "//fboss/fsdb/if:fsdb_model",
        "//fboss/fsdb/if:fsdb_oper-cpp2-types",
        "//fboss/lib:common_file_utils",
        "//fboss/lib:common_utils",
        "//fboss/lib/config:fboss_config_utils",
        "//fboss/lib/phy:phy-cpp2-types",
        "//fboss/lib/phy:prbs-cpp2-types",
        "//fboss/lib/thrift_service_client:thrift-service-client",
        "//fboss/mka_service/if/facebook:mka_config-cpp2-types",
        "//fboss/mka_service/if/facebook:mka_service_thrift-cpp2-services",
        "//fboss/qsfp_service/fsdb/facebook/test:fsdb-test-utils",
        "//fboss/qsfp_service/if:transceiver-cpp2-types",
        "//fboss/qsfp_service/lib:qsfp-service-client",
        "//folly:network_address",
        "//folly:random",
        "//folly:string",
        "//folly:subprocess",
        "//folly/debugging/exception_tracer:exception_tracer",
        "//folly/io/async:scoped_event_base_thread",
        "//folly/json:dynamic",
        "//folly/logging:logging",
        "//thrift/lib/cpp/util:enum_utils",
        "//thrift/lib/cpp2/async:rocket_client_channel",
        "//thrift/lib/cpp2/protocol:protocol",
    ],
    exported_external_deps = [
        "gflags",
        ("boost", None, "boost_container"),
    ],
)

cpp_library(
    name = "macsec_test_utils",
    srcs = [
        "facebook/MacsecTestUtils.cpp",
    ],
    exported_deps = [
        "//fboss/agent/test:resourcelibutil",
        "//fboss/facebook/mka_service/mka_module:mka_structs",
        "//fboss/mka_service/if/facebook:mka_config-cpp2-types",
        "//fboss/mka_service/if/facebook:mka_service_thrift-cpp2-services",
    ],
)

cpp_library(
    name = "dependency_tests",
    srcs = [
        "DependencyTest.cpp",
        "LacpSanityTests.cpp",
        "LinkTest.cpp",
        "LinkTestUtils.cpp",
        "facebook/MacsecSanityTests.cpp",
        "facebook/MacsecTest.cpp",
    ],
    link_whole = True,
    # Will need symbols from bcm, sai layers. Those
    # will come when we build bcm/sai link test bins
    undefined_symbols = True,
    exported_deps = [
        "fbsource//third-party/googletest:gtest",
        "//fboss/agent:core",
        "//fboss/agent:fboss-error",
        "//fboss/agent:fboss-types",
        "//fboss/agent:load_agent_config",
        "//fboss/agent:main-common",
        "//fboss/agent:platform_base",
        "//fboss/agent/hw:hardware_stats-cpp2-types",
        "//fboss/agent/hw:hw_switch_warmboot_helper",
        "//fboss/agent/hw/test:config_factory",
        "//fboss/agent/hw/test:hw_packet_utils",
        "//fboss/agent/hw/test:hw_qos_utils",
        "//fboss/agent/hw/test:hw_test_ecmp_utils",
        "//fboss/agent/hw/test:load_balancer_utils",
        "//fboss/agent/platforms/common:platform_mapping",
        "//fboss/agent/state:state",
        "//fboss/agent/state:state_utils",
        "//fboss/agent/test:agent_test",
        "//fboss/agent/test:ecmp_helper",
        "//fboss/agent/test:resourcelibutil",
        "//fboss/agent/test:trunk_utils",
        "//fboss/agent/test/utils:copp_test_utils",
        "//fboss/agent/test/utils:qos_test_utils",
        "//fboss/facebook/mka_service/mka_module:mka_structs",
        "//fboss/lib:common_file_utils",
        "//fboss/lib:common_utils",
        "//fboss/lib/config:fboss_config_utils",
        "//fboss/lib/phy:phy-cpp2-types",
        "//fboss/lib/thrift_service_client:thrift-service-client",
        "//fboss/mka_service/if/facebook:mka_config-cpp2-types",
        "//fboss/mka_service/if/facebook:mka_service_thrift-cpp2-services",
        "//fboss/qsfp_service/if:transceiver-cpp2-types",
        "//fboss/qsfp_service/lib:qsfp-service-client",
        "//folly:string",
        "//folly:subprocess",
        "//folly/debugging/exception_tracer:exception_tracer",
        "//folly/io/async:scoped_event_base_thread",
        "//folly/json:dynamic",
        "//folly/logging:logging",
        "//thrift/lib/cpp2/async:rocket_client_channel",
        "//thrift/lib/cpp2/protocol:protocol",
    ],
    exported_external_deps = [
        "gflags",
        ("boost", None, "boost_container"),
    ],
)

cpp_library(
    name = "agent_ensemble_link_tests",
    srcs = [
        "AgentEnsembleDependencyTest.cpp",
        "AgentEnsembleEmptyLinkTest.cpp",
        "AgentEnsembleLacpSanityTests.cpp",
        "AgentEnsembleLinkSanityTests.cpp",
        "AgentEnsembleLinkTest.cpp",
        "AgentEnsembleMacLearningTests.cpp",
        "AgentEnsembleOpenBmcUpgradeTests.cpp",
        "AgentEnsembleOpticsTest.cpp",
        "AgentEnsemblePhyInfoTest.cpp",
        "AgentEnsemblePrbsTest.cpp",
        "AgentEnsemblePtpTests.cpp",
        "AgentEnsembleSpeedChangeTest.cpp",
        "LinkTestUtils.cpp",
        "facebook/AgentEnsembleFsdbTests.cpp",
        "facebook/AgentEnsembleMacsecFsdbTests.cpp",
        "facebook/AgentEnsembleMacsecSanityTests.cpp",
        "facebook/AgentEnsembleMacsecSessionTests.cpp",
        "facebook/AgentEnsembleMacsecStatTests.cpp",
        "facebook/AgentEnsembleMacsecTest.cpp",
        "facebook/AgentEnsembleQsfpFsdbTests.cpp",
    ],
    link_whole = True,
    undefined_symbols = True,
    exported_deps = [
        "fbcode//common/process:process",
        "fbcode//fboss/agent:agent_stats-cpp2-types",
        "fbcode//fboss/agent:core",
        "fbcode//fboss/agent:fboss-error",
        "fbcode//fboss/agent:fboss-types",
        "fbcode//fboss/agent:load_agent_config",
        "fbcode//fboss/agent:main-common",
        "fbcode//fboss/agent:packet",
        "fbcode//fboss/agent:platform_base",
        "fbcode//fboss/agent/hw:hardware_stats-cpp2-types",
        "fbcode//fboss/agent/hw/test:config_factory",
        "fbcode//fboss/agent/packet:packet",
        "fbcode//fboss/agent/packet:packet_factory",
        "fbcode//fboss/agent/platforms/common:platform_mapping",
        "fbcode//fboss/agent/state:state",
        "fbcode//fboss/agent/state:state_utils",
        "fbcode//fboss/agent/test:agent_ensemble_test",
        "fbcode//fboss/agent/test:ecmp_helper",
        "fbcode//fboss/agent/test:resourcelibutil",
        "fbcode//fboss/agent/test:trunk_utils",
        "fbcode//fboss/agent/test:utils",
        "fbcode//fboss/agent/test/utils:copp_test_utils",
        "fbcode//fboss/agent/test/utils:load_balancer_test_utils",
        "fbcode//fboss/agent/test/utils:packet_snooper",
        "fbcode//fboss/agent/test/utils:pkt_test_utils",
        "fbcode//fboss/agent/test/utils:port_test_utils",
        "fbcode//fboss/agent/test/utils:qos_test_utils",
        "fbcode//fboss/agent/test/utils:trap_packet_utils",
        "fbcode//fboss/facebook/mka_service/fsdb/tests:MKAFsdbTestUtils",
        "fbcode//fboss/facebook/mka_service/mka_module:mka_structs",
        "fbcode//fboss/fsdb/client:fsdb_pub_sub",
        "fbcode//fboss/fsdb/common:flags",
        "fbcode//fboss/fsdb/if:fsdb_model",
        "fbcode//fboss/fsdb/if:fsdb_oper-cpp2-types",
        "fbcode//fboss/lib:common_file_utils",
        "fbcode//fboss/lib:common_utils",
        "fbcode//fboss/lib/config:fboss_config_utils",
        "fbcode//fboss/lib/phy:phy-cpp2-types",
        "fbcode//fboss/lib/phy:prbs-cpp2-types",
        "fbcode//fboss/lib/thrift_service_client:thrift-service-client",
        "fbcode//fboss/mka_service/if/facebook:mka_config-cpp2-types",
        "fbcode//fboss/mka_service/if/facebook:mka_service_thrift-cpp2-services",
        "fbcode//fboss/qsfp_service/fsdb/facebook/test:fsdb-test-utils",
        "fbcode//fboss/qsfp_service/if:transceiver-cpp2-types",
        "fbcode//fboss/qsfp_service/lib:qsfp-service-client",
        "fbcode//folly:network_address",
        "fbcode//folly:random",
        "fbcode//folly:string",
        "fbcode//folly:subprocess",
        "fbcode//folly/debugging/exception_tracer:exception_tracer",
        "fbcode//folly/io/async:scoped_event_base_thread",
        "fbcode//folly/json:dynamic",
        "fbcode//folly/logging:logging",
        "fbcode//thrift/lib/cpp2/async:rocket_client_channel",
        "fbcode//thrift/lib/cpp2/protocol:protocol",
        "fbsource//third-party/googletest:gtest",
        "//common/process:process",
        "//fboss/agent:agent_stats-cpp2-types",
        "//fboss/agent:core",
        "//fboss/agent:fboss-error",
        "//fboss/agent:fboss-types",
        "//fboss/agent:load_agent_config",
        "//fboss/agent:main-common",
        "//fboss/agent:packet",
        "//fboss/agent:platform_base",
        "//fboss/agent/hw:hardware_stats-cpp2-types",
        "//fboss/agent/hw/test:config_factory",
        "//fboss/agent/packet:packet",
        "//fboss/agent/packet:packet_factory",
        "//fboss/agent/platforms/common:platform_mapping",
        "//fboss/agent/state:state",
        "//fboss/agent/state:state_utils",
        "//fboss/agent/test:agent_ensemble_test",
        "//fboss/agent/test:ecmp_helper",
        "//fboss/agent/test:resourcelibutil",
        "//fboss/agent/test:trunk_utils",
        "//fboss/agent/test:utils",
        "//fboss/agent/test/utils:copp_test_utils",
        "//fboss/agent/test/utils:load_balancer_test_utils",
        "//fboss/agent/test/utils:packet_snooper",
        "//fboss/agent/test/utils:pkt_test_utils",
        "//fboss/agent/test/utils:port_test_utils",
        "//fboss/agent/test/utils:qos_test_utils",
        "//fboss/agent/test/utils:trap_packet_utils",
        "//fboss/facebook/mka_service/fsdb/tests:MKAFsdbTestUtils",
        "//fboss/facebook/mka_service/mka_module:mka_structs",
        "//fboss/fsdb/client:fsdb_pub_sub",
        "//fboss/fsdb/common:flags",
        "//fboss/fsdb/if:fsdb_model",
        "//fboss/fsdb/if:fsdb_oper-cpp2-types",
        "//fboss/lib:common_file_utils",
        "//fboss/lib:common_utils",
        "//fboss/lib/config:fboss_config_utils",
        "//fboss/lib/phy:phy-cpp2-types",
        "//fboss/lib/phy:prbs-cpp2-types",
        "//fboss/lib/thrift_service_client:thrift-service-client",
        "//fboss/mka_service/if/facebook:mka_config-cpp2-types",
        "//fboss/mka_service/if/facebook:mka_service_thrift-cpp2-services",
        "//fboss/qsfp_service/fsdb/facebook/test:fsdb-test-utils",
        "//fboss/qsfp_service/if:transceiver-cpp2-types",
        "//fboss/qsfp_service/lib:qsfp-service-client",
        "//folly:network_address",
        "//folly:random",
        "//folly:string",
        "//folly:subprocess",
        "//folly/debugging/exception_tracer:exception_tracer",
        "//folly/io/async:scoped_event_base_thread",
        "//folly/json:dynamic",
        "//folly/logging:logging",
        "//thrift/lib/cpp/util:enum_utils",
        "//thrift/lib/cpp2/async:rocket_client_channel",
        "//thrift/lib/cpp2/protocol:protocol",
    ],
    exported_external_deps = [
        "gflags",
        ("boost", None, "boost_container"),
    ],
)

[
    cpp_binary(
        name = "bcm_link_test{}".format(to_impl_suffix(sdk)),
        srcs = [
            "BcmLinkTests.cpp",
        ],
        linker_flags = [
            "--export-dynamic",
            "--unresolved-symbols=ignore-all",
        ],
        versions = to_versions(sdk),
        deps = [
            "fbsource//third-party/googletest:gtest",
            "//fboss/agent:main-bcm",
            "//fboss/agent/hw/bcm/tests:bcm_ecmp_utils",
            "//fboss/agent/hw/bcm/tests:bcm_packet_trap_helper",
            "//fboss/agent/hw/bcm/tests:bcm_qos_utils",
            "//fboss/agent/platforms/wedge:platform",
            "//fboss/agent/test/link_tests:link_tests",
        ],
        external_deps = [
            "gflags",
            "glog",
        ],
    )
    for sdk in BCM_SDKS
]

[
    cpp_binary(
        name = "bcm_dependency_test{}".format(to_impl_suffix(sdk)),
        srcs = [
            "BcmLinkTests.cpp",
        ],
        linker_flags = [
            "--export-dynamic",
            "--unresolved-symbols=ignore-all",
        ],
        versions = to_versions(sdk),
        deps = [
            "fbsource//third-party/googletest:gtest",
            "//fboss/agent:main-bcm",
            "//fboss/agent/hw/bcm/tests:bcm_ecmp_utils",
            "//fboss/agent/hw/bcm/tests:bcm_packet_trap_helper",
            "//fboss/agent/hw/bcm/tests:bcm_qos_utils",
            "//fboss/agent/platforms/wedge:platform",
            "//fboss/agent/test/link_tests:dependency_tests",
        ],
        external_deps = [
            "gflags",
            "glog",
        ],
    )
    for sdk in BCM_SDKS
]

all_sai_link_test_binaries()
