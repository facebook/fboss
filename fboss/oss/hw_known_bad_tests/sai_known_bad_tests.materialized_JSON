{
  "known_bad_tests": {
    "brcm/7.2.0.0_odp/7.2.0.0_odp/tomahawk": [
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE_25G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_50G_2_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        }
    ],
    "brcm/7.2.0.0_odp/7.2.0.0_odp/tomahawk3": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfileroundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwLearningForPortNoCycle"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        }
    ],
    "brcm/7.2.0.0_odp/7.2.0.0_odp/trident2": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTestForSAI*"
        },
        {
          "test_name_regex": "HwHashPolarizationTests*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwHashTrunk4x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        }
    ],
    "brcm/7.2.0.0_odp/8.2.0.0_odp/tomahawk": [
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE_25G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_50G_2_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        }
    ],
    "brcm/7.2.0.0_odp/8.2.0.0_odp/tomahawk3": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfileroundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwLearningForPortNoCycle"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        }
    ],
    "brcm/7.2.0.0_odp/8.2.0.0_odp/trident2": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTestForSAI*"
        },
        {
          "test_name_regex": "HwHashPolarizationTests*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwHashTrunk4x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk": [
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE_25G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_50G_2_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk3": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfileroundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwLearningForPortNoCycle"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk4": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/trident2": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTestForSAI*"
        },
        {
          "test_name_regex": "HwHashPolarizationTests*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwHashTrunk4x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/8.2.0.0_odp/9.0_ea_odp/tomahawk": [
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE_25G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_50G_2_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        }
    ],
    "brcm/8.2.0.0_odp/9.0_ea_odp/tomahawk3": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfileroundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwLearningForPortNoCycle"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        }
    ],
    "brcm/8.2.0.0_odp/9.0_ea_odp/tomahawk4": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        }
    ],
    "brcm/8.2.0.0_odp/9.0_ea_odp/trident2": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTestForSAI*"
        },
        {
          "test_name_regex": "HwHashPolarizationTests*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwHashTrunk4x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/8.2.0.0_sim_odp/8.2.0.0_sim_odp/tomahawk4/simulator": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.*"
        },
        {
          "test_name_regex": "HwJumboFramesTest.*"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "HwParityErrorTest.*"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.*"
        },
        {
          "test_name_regex": "HwCoppTest.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.overflowRouteCounters"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswTest.verifyInvariants"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMap"
        },
        {
          "test_name_regex": "HwOverflowTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwRouteStatTest.*"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_200G_4_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_COPPER.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_40G_4_NRZ_NOFEC.TestProfile"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.rollback"
        },
        {
          "test_name_regex": "SaiRollbackTest.*"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        }
    ],
    "brcm/9.0_ea_dnx_odp/9.0_ea_dnx_odp/jericho2": [
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass"
        },
        {
          "test_name_regex": "HwNeighborTest/2.ResolvePendingEntryThenChangeLookupClass"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].*Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyClassID*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyClassIdWithNhopResolutionFlap"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.ArpRequest*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.Lldp*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.LacpPacketReceiveSrcPort"
        },
        {
          "test_name_regex": "HwPacketFloodTest.NdpFloodTest"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreate"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatMultipleActions"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRename*"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatModify"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle"
        },
        {
          "test_name_regex": "HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatChangeCounterType"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*Ip4*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*Tcp*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*Icmp*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*VlanID*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.*LookupClass*"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.*"
        },
        {
          "test_name_regex": "HwSflowTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/[01].*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/[01].*"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].*"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.*"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMacLearningStaticEntriesTest.*"
        },
        {
          "test_name_regex": "HwMacLearningAndMyStationInteractionTest.*"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTest*"
        },
        {
          "test_name_regex": "HwAqmTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE*"
        },
        {
          "test_name_regex": "HwMirrorTest/[01].*"
        },
        {
          "test_name_regex": "HwNeighborTest/1.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].*"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/[01].*"
        },
        {
          "test_name_regex": "HwFlexPortTest.*"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.*"
        },
        {
          "test_name_regex": "HwResourceStatsTest.aclStats"
        },
        {
          "test_name_regex": "HwSwitchStateReplayTest.test"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].*"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*"
        },
        {
          "test_name_regex": "HwProdInvariants.*"
        },
        {
          "test_name_regex": "HwHashTrunk.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.*"
        },
        {
          "test_name_regex": "HwWideEcmpTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "SaiRollbackTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEmptyTest.*"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*"
        },
        {
          "test_name_regex": "HwNeighborOnMultiplePortsTest.*"
        },
        {
          "test_name_regex": "HwPortLedTest.*"
        },
        {
          "test_name_regex": "HwPortStressTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "HwNeighborTest/3.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwRouteOverDifferentAddressFamilyNhopTest.*"
        },
        {
          "test_name_regex": "HwL3Test.*"
        },
        {
          "test_name_regex": "HwLoadBalancerNegativeProtocolMatchTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.*"
        },
        {
          "test_name_regex": "HwParityErrorTest.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwOverflowTest.*"
        },
        {
          "test_name_regex": "HwSwitchStatsTxCounterTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalUcastToMidPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.NdpSolicitNeighbor"
        },
        {
          "test_name_regex": "HwCoppTest/0.NdpAdvertisementToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DHCPv6SolicitToMidPriQ"
        },
        {
          "test_name_regex": "HwPacketSendTest.LldpToFrontPanelOutOfPort"
        },
        {
          "test_name_regex": "HwPacketSendTest.LldpToFrontPanelWithBufClone"
        },
        {
          "test_name_regex": "HwPacketSendTest.ArpRequestToFrontPanelPortSwitched"
        },
        {
          "test_name_regex": "HwRouteStatTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.*"
        },
        {
          "test_name_regex": "HwVlanTest.*"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwConfigVerifyQosTest.*"
        }
    ],
    "brcm/9.0_ea_odp/9.0_ea_odp/tomahawk": [
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwTest_PROFILE_25G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_50G_2_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpThenStateUp"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/9.0_ea_odp/9.0_ea_odp/tomahawk3": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesNoEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.MultipleTablesWithEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTablesThenEntries"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyQueuePerHostAclTableAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.RemoveAclTable"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.SaiAclTableGroupTest.SingleAclTableGroup"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.cold_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX10G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX100G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortONEX40G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortTWOX50G"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfileroundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_50G_2_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_CL74_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_25G_1_NRZ_NOFEC_COPPER_RACK_YV3_T1.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.HwTest_PROFILE_50G_2_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.HwTest_PROFILE_10G_1_NRZ_NOFEC_COPPER.TestProfile"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot.SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwFlexPortTest.FlexPortFOURX25G"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwPfcTest.*"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwLearningForPortNoCycle"
        },
        {
          "test_name_regex": "HwPacketSendReceiveTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "warm_boot.HwOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "warm_boot.SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        }
    ],
    "brcm/9.0_ea_odp/9.0_ea_odp/tomahawk4": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        }
    ],
    "brcm/9.0_ea_odp/9.0_ea_odp/trident2": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*"
        },
        {
          "test_name_regex": "HwEcmpTest.Ucmp.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/1.*"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithTruncateV[46]"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddFirst"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddTwoTablesDeleteAddSecond"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteFirstTableAfterWarmboot"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.DeleteSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*"
        },
        {
          "test_name_regex": "HwTrunkTest.*"
        },
        {
          "test_name_regex": "HwEcmpTrunkTest.*"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwHashPolarizationTests.fullXHalfHash"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwHashPolarizationTestForSAI*"
        },
        {
          "test_name_regex": "HwHashPolarizationTests*"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/0.ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwHashTrunk4x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        }
    ],
    "brcm/9.0_ea_sim_odp/9.0_ea_sim_odp/tomahawk4/simulator": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.*"
        },
        {
          "test_name_regex": "HwJumboFramesTest.*"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "HwParityErrorTest.*"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.*"
        },
        {
          "test_name_regex": "HwCoppTest.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.overflowRouteCounters"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswTest.verifyInvariants"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMap"
        },
        {
          "test_name_regex": "HwOverflowTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwRouteStatTest.*"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_200G_4_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_COPPER.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_40G_4_NRZ_NOFEC.TestProfile"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.rollback"
        },
        {
          "test_name_regex": "SaiRollbackTest.*"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        }
    ],
    "brcm/9.0_ea_sim_odp/9.0_ea_sim_odp/tomahawk5/simulator": [
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmp256WidthUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow"
        },
        {
          "test_name_regex": "roundtrip.trunk_2_preprod_2_trunk.warm_boot_for_warm_boot.0.HwEmptyTest.CheckInit.HwWideEcmpTest.WideUcmpUnderflow"
        },
        {
          "test_name_regex": "HwAclCoppTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/1.*"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateSameTwice"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters"
        },
        {
          "test_name_regex": "HwCoppTest.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest/0.VerifyCoppPpsLowPri"
        },
        {
          "test_name_regex": "HwCoppTest.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest/0.Ipv6LinkLocalMcastTxFromCpu"
        },
        {
          "test_name_regex": "HwCoppTest.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.DstIpNetworkControlDscpToHighPriQ"
        },
        {
          "test_name_regex": "HwMPLSTest.MplsNoMatchPktsToLowPriQ"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].Ucmp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.VerifyLoopBackCpu"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*"
        },
        {
          "test_name_regex": "HwMPLSTest.*"
        },
        {
          "test_name_regex": "HwTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*"
        },
        {
          "test_name_regex": "HwAclCounterTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest"
        },
        {
          "test_name_regex": "HwCoppTest.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "HwCoppTest/0.L3MTUErrorToLowPriQ"
        },
        {
          "test_name_regex": "warm_boot.HwFlexPortTest.*"
        },
        {
          "test_name_regex": "HwMirrorTest.*"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTest.*"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.VerifyWRRToAllSPDscpToQueue"
        },
        {
          "test_name_regex": "HwCoppQosTest.*"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwL3Test.TestRouteHitBit"
        },
        {
          "test_name_regex": "HwL3Test.TestNeighborHitBit"
        },
        {
          "test_name_regex": "HwMPLSTest/0.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/1.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/2.Pop2Cpu"
        },
        {
          "test_name_regex": "HwMPLSTest/3.Pop2Cpu"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/2"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*"
        },
        {
          "test_name_regex": "HwUdfTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashTrunk4x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x2PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "HwHashTrunk8x3PolarizationTests.FullHalfxFullHalf"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkPortStatsWithMplsPush"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.VerifyMemberOrderEffect"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.TcpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinks"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.UdpEgressLinksOnEcmpExpand"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCountWithLargePackets"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange"
        },
        {
          "test_name_regex": "HwPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.PfcWatchdog.*"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithGlobalHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyPfcWithPGHeadRoomToZero"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest/HwTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyIngressPriorityGroupWatermarks"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.verifyBufferPoolWatermarks"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validatePGParamChange"
        },
        {
          "test_name_regex": "HwIngressBufferTest.validateIngressPoolParamChange"
        },
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*"
        },
        {
          "test_name_regex": "HwAqmTest.*"
        },
        {
          "test_name_regex": "HwJumboFramesTest.*"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*"
        },
        {
          "test_name_regex": "HwParityErrorTest.*"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*"
        },
        {
          "test_name_regex": "HwWatermarkTest.*"
        },
        {
          "test_name_regex": "HwCoppTest.*"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.*"
        },
        {
          "test_name_regex": "HwLoopBackTest.*"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwPtpTcTest.*"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.overflowRouteCounters"
        },
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.AddSecondTableAfterWarmboot"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsRswTest.verifyInvariants"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMap"
        },
        {
          "test_name_regex": "HwOverflowTest.overflowRoutes"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/0.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDCpu"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest/1.VerifyHostToQueueMappingClassIDFrontPanel"
        },
        {
          "test_name_regex": "HwRouteStatTest.*"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled"
        },
        {
          "test_name_regex": "HwTest_PROFILE_100G_4_NRZ_RS528_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_10G_1_NRZ_NOFEC_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_200G_4_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_COPPER.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_400G_8_PAM4_RS544X2N_OPTICAL.TestProfile"
        },
        {
          "test_name_regex": "HwTest_PROFILE_40G_4_NRZ_NOFEC.TestProfile"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableCpu"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.VerifyDscpMarkingAndTtlAclTableFrontPanel"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.rollback"
        },
        {
          "test_name_regex": "SaiRollbackTest.*"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/0.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsAfterResolveCpuBlock"
        },
        {
          "test_name_regex": "HwQueuePerHostTest/1.VerifyHostToQueueMappingClassIDsWithResolveCpuBlock"
        }
    ],
    "leaba/1.42.1/1.42.1/gibraltar": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionHwMacLearning$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionSwMacLearning$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats$"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOnTtlHitCpu$"
        }
    ],
    "leaba/1.42.1/1.42.1/simulator": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.JumboFramesGetThrough$"
        },
        {
          "test_name_regex": "HwResourceStatsTest.l3Stats$"
        },
        {
          "test_name_regex": "HwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/0.TunnelRefTest$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "HwPortStressTest.linkStateToggle$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.VerifyKbps$"
        },
        {
          "test_name_regex": "HwMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.v[46]UDP$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].[EU]cmpLoadBalanceFullHash.*Traffic$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].[EU]cmpLoadBalanceHalfHash.*Traffic$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].ECMPShrinkExpandLoadBalance.*HashCpuTraffic$"
        },
        {
          "test_name_regex": "HwEcmpTest.UcmpOverflowZero$"
        },
        {
          "test_name_regex": "HwEcmpTest.UcmpOverflowZeroNotEnoughToRoundUp$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacket.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBump.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.*$"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*$"
        },
        {
          "test_name_regex": "HwSflowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*$"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*$"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*$"
        },
        {
          "test_name_regex": "HwWatermarkTest.*$"
        },
        {
          "test_name_regex": "HwLoopBackTest.*$"
        },
        {
          "test_name_regex": "HwPacketSendTest.*$"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "HwParityErrorTest.*$"
        },
        {
          "test_name_regex": "HwPortLedTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest.*$"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStats.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk$"
        },
        {
          "test_name_regex": "HwWatermarkTest.*$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*$"
        },
        {
          "test_name_regex": "HwMPLSTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndMyStationInteractionTest.*$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "warm_boot.HwAclCounterTest.VerifyCounterNoHitNoBump.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningStaticEntriesTest.VerifyStaticMacEntryAdd$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "warm_boot.HwSwitchStatsTxCounterTest.SendPacket$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].LldpProtocolToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].ArpRequestAndReplyToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].LocalDstIpBgpPortToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].LocalDstIpNonBgpPortToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].SlowProtocolsMacToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastTxFromCpu$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].DHCPv6SolicitToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].DHCPv6AdvertiseToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwRouteOverDifferentAddressFamilyNhopTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwLoadBalancerNegativeTestV6RoCE.EcmpLoadBalanceFullHashFrontPanelTraffic$"
        },
        {
          "test_name_regex": "HwAqmTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAlpmStressTest.*$"
        },
        {
          "test_name_regex": "HwEcmpTest.*$"
        },
        {
          "test_name_regex": "HwOverflowTest.*$"
        },
        {
          "test_name_regex": "HwPtpTcTest.*$"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "HwRouteOverDifferentAddressFamilyNhopTest.*$"
        },
        {
          "test_name_regex": "HwWideEcmpTest.*$"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.*$"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        }
    ],
    "leaba/1.42.1/1.42.8/gibraltar": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionHwMacLearning$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionSwMacLearning$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats$"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOnTtlHitCpu$"
        }
    ],
    "leaba/1.42.8/1.42.8/gibraltar": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionHwMacLearning$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionSwMacLearning$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats$"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOnTtlHitCpu$"
        }
    ],
    "leaba/1.42.8/1.42.8/simulator": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "HwRouteScaleTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.JumboFramesGetThrough$"
        },
        {
          "test_name_regex": "HwResourceStatsTest.l3Stats$"
        },
        {
          "test_name_regex": "HwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/0.TunnelRefTest$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "HwPortStressTest.linkStateToggle$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.VerifyKbps$"
        },
        {
          "test_name_regex": "HwMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "HwL4PortBlackHolingTest.v[46]UDP$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46]ToMpls.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsPhp.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestsV[46]InMplsSwap.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].[EU]cmpLoadBalanceFullHash.*Traffic$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].[EU]cmpLoadBalanceHalfHash.*Traffic$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV[46].ECMPShrinkExpandLoadBalance.*HashCpuTraffic$"
        },
        {
          "test_name_regex": "HwEcmpTest.UcmpOverflowZero$"
        },
        {
          "test_name_regex": "HwEcmpTest.UcmpOverflowZeroNotEnoughToRoundUp$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacket.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBump.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.*$"
        },
        {
          "test_name_regex": "HwTrunkLoadBalancerTest.*$"
        },
        {
          "test_name_regex": "HwSflowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "HwOlympicQosTests.*$"
        },
        {
          "test_name_regex": "HwOlympicQosSchedulerTest.*$"
        },
        {
          "test_name_regex": "Hw2QueueToOlympicQoSTest.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "HwSendPacketToQueueTest.*$"
        },
        {
          "test_name_regex": "HwWatermarkTest.*$"
        },
        {
          "test_name_regex": "HwLoopBackTest.*$"
        },
        {
          "test_name_regex": "HwPacketSendTest.*$"
        },
        {
          "test_name_regex": "HwPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "HwParityErrorTest.*$"
        },
        {
          "test_name_regex": "HwPortLedTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.*$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostL2Test.*$"
        },
        {
          "test_name_regex": "HwQueuePerHostRouteTest.*$"
        },
        {
          "test_name_regex": "HwTrunkTest.TrunkPortStats.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.Verify.*Trunk$"
        },
        {
          "test_name_regex": "HwMacSwLearningModeTest.*ForTrunk$"
        },
        {
          "test_name_regex": "HwWatermarkTest.*$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndNeighborResolutionTest/[02].*$"
        },
        {
          "test_name_regex": "HwMPLSTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningAndMyStationInteractionTest.*$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "warm_boot.HwAclCounterTest.VerifyCounterNoHitNoBump.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningStaticEntriesTest.VerifyStaticMacEntryAdd$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "warm_boot.HwSwitchStatsTxCounterTest.SendPacket$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].LldpProtocolToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].ArpRequestAndReplyToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].LocalDstIpBgpPortToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].LocalDstIpNonBgpPortToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].SlowProtocolsMacToHighPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].Ipv6LinkLocalMcastTxFromCpu$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].DHCPv6SolicitToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwCoppTest/[01].DHCPv6AdvertiseToMidPriQ$"
        },
        {
          "test_name_regex": "warm_boot.HwRouteOverDifferentAddressFamilyNhopTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwLoadBalancerNegativeTestV6RoCE.EcmpLoadBalanceFullHashFrontPanelTraffic$"
        },
        {
          "test_name_regex": "HwAqmTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAlpmStressTest.*$"
        },
        {
          "test_name_regex": "HwEcmpTest.*$"
        },
        {
          "test_name_regex": "HwOverflowTest.*$"
        },
        {
          "test_name_regex": "HwPtpTcTest.*$"
        },
        {
          "test_name_regex": "HwRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "HwRouteOverDifferentAddressFamilyNhopTest.*$"
        },
        {
          "test_name_regex": "HwWideEcmpTest.*$"
        },
        {
          "test_name_regex": "SaiQPHRollbackTest.*$"
        },
        {
          "test_name_regex": "SaiRouteRollbackTest.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        }
    ],
    "leaba/1.62.0/1.62.0/gibraltar": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.*"
        },
        {
          "test_name_regex": "HwVoqSwitchWithMultipleDsfNodesTest.*"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.*"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionHwMacLearning$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningAndMyStationInteractionTest.verifyInteractionSwMacLearning$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueEcnMarkedStats$"
        },
        {
          "test_name_regex": "HwPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOnTtlHitCpu$"
        }
    ],
    "leaba/1.62.0/1.62.0/gibraltar/fabric": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].UnresolvedAndResolvedMultiNextHop"
        },
        {
          "test_name_regex": "HwRouteTest/[01].verifyHostRouteChange"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.AclQualifiers"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.sendPacketCpu"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOn.*Cpu"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.trapPktsOnPort"
        },
        {
          "test_name_regex": "SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwNeighborTest/[02].ResolvePendingEntryThenChangeLookupClass"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.checkFabricPortSpray"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.checkFabricPortSprayWithIsolate"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.rxPacketToCpuBgpDstPort"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.rxPacketToCpuBgpSrcPort"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.fabricIsolate"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.fabricSwitchIsolate"
        }
    ],
    "leaba/1.62.0/1.62.0/gibraltar/voq": [
        {
          "test_name_regex": "HwTrafficPfcTest.*"
        },
        {
          "test_name_regex": "HwPfcTest.*"
        },
        {
          "test_name_regex": "HwProdInvariantsMmuLosslessTest.*"
        },
        {
          "test_name_regex": "HwIngressBufferTest.*"
        },
        {
          "test_name_regex": "HwCoppTest/[01].EapolToHighPriQ"
        },
        {
          "test_name_regex": "HwAclCoppTest.*$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "HwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTest.*$"
        },
        {
          "test_name_regex": "SaiAclTableGroupTrafficTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcn$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEct[01]$"
        },
        {
          "test_name_regex": "HwInDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "HwInPauseDiscardsCounterTest.rxPauseDisabled$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.ExceedMaxLabels$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest.*TunnelRefTest$"
        },
        {
          "test_name_regex": "HwL2ClassIDTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "HwCoppTest/1.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwCoppTest/1.L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "HwDscpMarkingTest.*$"
        },
        {
          "test_name_regex": "warm_boot.HwMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "HwMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "HwMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "HwMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "HwRouteScaleTest.turboFabricScaleTest$"
        },
        {
          "test_name_regex": "HwMmuTuningTest.*$"
        },
        {
          "test_name_regex": "HwCoppTest/0.JumboFramesToQueues$"
        },
        {
          "test_name_regex": "HwMirrorTest.*$"
        },
        {
          "test_name_regex": "HwPacketFloodTest.*$"
        },
        {
          "test_name_regex": "HwCoppQosTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTest.*$"
        },
        {
          "test_name_regex": "HwTeFlowTrafficTest.*$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "warm_boot.HwTrunkTest.TrunkMemberPortDownMinLinksViolated$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkDownThenUpThenStateUp$"
        },
        {
          "test_name_regex": "HwL3Test.*$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatDelete$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.AclStatRename$"
        },
        {
          "test_name_regex": "warm_boot.HwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "HwJumboFramesTest.SuperJumboFramesGetDropped$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.OneLabel$"
        },
        {
          "test_name_regex": "HwLabelEdgeRouteTest/1.MaxLabels$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].Pop2Cpu$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsMatchPktsNottrapped$"
        },
        {
          "test_name_regex": "HwMPLSTest/[0123].MplsNoMatchPktsToLowPriQ$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].EcmpModify$"
        },
        {
          "test_name_regex": "warm_boot.HwDataPlaneMirrorTest/[01].ErspanMirrorWithLagMember$"
        },
        {
          "test_name_regex": "HwDataPlaneMirrorTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "HwDscpQueueMappingTest.VerifyAclAndQosMapConflictCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsWithResolveCpu$"
        },
        {
          "test_name_regex": ".*VerifyHostToQueueMappingClassIDsAfterResolveCpu$"
        },
        {
          "test_name_regex": "HwProdInvariantsFswTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwProdInvariantsRswMhnicTest.verifyInvariants$"
        },
        {
          "test_name_regex": "HwAclPriorityTest.AclsChanged$"
        },
        {
          "test_name_regex": "HwHashPolarizationTest.*$"
        },
        {
          "test_name_regex": "HwHashTrunk[4|8]x[2|3]PolarizationTests.*$"
        },
        {
          "test_name_regex": "HwDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "HwCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "HwLabelSwitchRouteTest/[01].Swap2Php$"
        },
        {
          "test_name_regex": "HwSflowTest.SflowSamplingEnabled$"
        },
        {
          "test_name_regex": "warm_boot.HwSflowMirrorTest.VerifySampledPacketWithLagMemberAsEgressPort$"
        },
        {
          "test_name_regex": "HwMPLSTest/0.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/1.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/2.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwMPLSTest/3.ExpiringTTL$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "HwCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "HwWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "warm_boot.HwEcmpTrunkTest.TrunkL2ResolveNhopThenLinkAndLACPDownThenUpBeforeReinit$"
        },
        {
          "test_name_regex": "HwRouteTest/[01].VerifyRouting$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].AclRedirectToNexthop.*$"
        },
        {
          "test_name_regex": "HwMPLSTest/[01].punt2Cpu$"
        },
        {
          "test_name_regex": "HwSflowMirrorTest.VerifySampledPacketCount$"
        },
        {
          "test_name_regex": "HwHashConsistencyTest.*$"
        },
        {
          "test_name_regex": "HwAqmTest.verifyEcnTrafficNoDrop$"
        },
        {
          "test_name_regex": "HwIpInIpTunnelTest.*$"
        },
        {
          "test_name_regex": "HwPortBandwidthTest/HwPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntry$"
        },
        {
          "test_name_regex": "HwNeighborTest/0.ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "HwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6RoCE.*$"
        },
        {
          "test_name_regex": "HwAclCounterTest.*Sport.*$"
        },
        {
          "test_name_regex": "HwFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.fabricIsolate$"
        },
        {
          "test_name_regex": "HwUdfTest.*$"
        },
        {
          "test_name_regex": "HwLoadBalancerTestV6Flowlet.*$"
        },
        {
          "test_name_regex": "warm_boot.*"
        },
        {
          "test_name_regex": "HwRouteTest/[01].UnresolvedAndResolvedMultiNextHop"
        },
        {
          "test_name_regex": "HwRouteTest/[01].verifyHostRouteChange"
        },
        {
          "test_name_regex": "HwRouteTest/[01].StaticIp2MplsRoutes"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.AclQualifiers"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.sendPacketCpu"
        },
        {
          "test_name_regex": "HwAclCounterTest.VerifyCounterBumpOn.*Cpu"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.trapPktsOnPort"
        },
        {
          "test_name_regex": "SaiNextHopGroupTest.addNextHopGroupPortDown"
        },
        {
          "test_name_regex": "HwNeighborTest/[13].*"
        },
        {
          "test_name_regex": "HwNeighborTest/[02].ResolvePendingEntryThenChangeLookupClass"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.checkFabricPortSpray"
        },
        {
          "test_name_regex": "HwVoqSwitchWithFabricPortsTest.checkFabricPortSprayWithIsolate"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.rxPacketToCpuBgpDstPort"
        },
        {
          "test_name_regex": "HwVoqSwitchTest.rxPacketToCpuBgpSrcPort"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.fabricIsolate"
        },
        {
          "test_name_regex": "HwFabricSwitchTest.fabricSwitchIsolate"
        }
    ]
  }
}