{
  "known_bad_tests": {
    "brcm/10.0_ea_sim_odp/10.0_ea_sim_odp/tomahawk5/simulator/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.UpdateErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.UpdateErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolve.*$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk4/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV4[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalfHash4X2WideTrunksV4CpuTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalfHash4X2WideTrunksV6CpuTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4FrontPanelTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6FrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validateConfig$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validateLossyMode$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePgNoPfc$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "AgentPfcTest.verifyPfcCounters$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk4/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV4[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentCoppTest/0.Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validateConfig$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validateLossyMode$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePgNoPfc$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "AgentPfcTest.verifyPfcCounters$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk5/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentBthOpcodeAclCounterTest.VerifyCounterBumpOnBthOpcodeHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletResourceTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithFabricPortsStartDrained.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithFabricPortsTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithMultipleDsfNodesTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.*$"
        },
        {
          "test_name_regex": "AgentPfcTest.*$"
        },
        {
          "test_name_regex": "AgentTrafficPfc.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToDefaultUCQueue$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToUCQueue$"
        },
        {
          "test_name_regex": "AgentMacLearningAndNeighborResolutionTest/0.learnMacProgramNeighborsAndMove$"
        },
        {
          "test_name_regex": "AgentMacLearningAndNeighborResolutionTest/2.learnMacProgramNeighborsAndMove$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk5/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV4[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentBthOpcodeAclCounterTest.VerifyCounterBumpOnBthOpcodeHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletResourceTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithFabricPortsStartDrained.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithFabricPortsTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchWithMultipleDsfNodesTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.*$"
        },
        {
          "test_name_regex": "AgentPfcTest.*$"
        },
        {
          "test_name_regex": "AgentTrafficPfc.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToDefaultUCQueue$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToUCQueue$"
        },
        {
          "test_name_regex": "AgentMacLearningAndNeighborResolutionTest/0.learnMacProgramNeighborsAndMove$"
        },
        {
          "test_name_regex": "AgentMacLearningAndNeighborResolutionTest/2.learnMacProgramNeighborsAndMove$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentMacOverFlowTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/11.7.0.0_dnx_odp/jericho3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/11.7.0.0_dnx_odp/jericho3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/11.7.0.0_dnx_odp/ramon3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/11.7.0.0_dnx_odp/ramon3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.switchReachability"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/12.0_ea_dnx_odp/jericho3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/12.0_ea_dnx_odp/jericho3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/12.0_ea_dnx_odp/ramon3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        }
    ],
    "brcm/11.7.0.0_dnx_odp/12.0_ea_dnx_odp/ramon3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.switchReachability"
        }
    ],
    "brcm/12.0_ea_dnx_odp/12.0_ea_dnx_odp/jericho3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/12.0_ea_dnx_odp/12.0_ea_dnx_odp/jericho3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentMmuTuningTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.ArpRequestToFrontPanelPortSwitched$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest*"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/0.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentEcmpNeighborTest/1.ResolvePendingResolveNexthop"
        },
        {
          "test_name_regex": "AgentFswRouteScaleTest.fswRouteScale"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest"
        },
        {
          "test_name_regex": "AgentRouteTest/0.ResolvedMultiNexthopToUnresolvedSingleNexthop"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyPfc.*"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.*"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.*$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentVoqSwitchLineRateTest.dramBlockedTime$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "AgentEcmpTest.*$"
        },
        {
          "test_name_regex": "AgentPortTest.PortLoopbackMode$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].VerifyClassIDForConnectedRoute$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentEgressForwardingDiscardsCounterTest.outForwardingDiscards$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatChangeCounterType$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[46].ResolvePendingEntryThenChangeLookupClassAgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.trapPktsOnPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPps$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchTest.rxPacketToCpu.*$"
        },
        {
          "test_name_regex": "MultiNodeAgentVoqSwitchTest.verifyInbandPing$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBack$"
        },
        {
          "test_name_regex": "AgentVoqSwitchInterruptTest.*$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.remoteNeighborWithEcmpGroup$"
        },
        {
          "test_name_regex": "warm_boot.AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "warm_boot.AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchLineRateTest.creditsDeleted$"
        },
        {
          "test_name_regex": "warm_boot.AgentVoqSwitchWithFabricPortsTest.fdrCellDrops$"
        },
        {
          "test_name_regex": "AgentVoqSwitchFullScaleDsfNodesTest.stressProgramEcmpRoutes$"
        },
        {
          "test_name_regex": "Agent2QueueToOlympicQoSTest.verifyDscpToQueueMapping$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentOlympicQosTests.VerifyDscpQueueMapping$"
        },
        {
          "test_name_regex": "AgentPortBandwidthPpsTest.VerifyPpsDynamicChanges$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        }
    ],
    "brcm/12.0_ea_dnx_odp/12.0_ea_dnx_odp/ramon3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        }
    ],
    "brcm/12.0_ea_dnx_odp/12.0_ea_dnx_odp/ramon3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchSelfLoopTest.*$"
        },
        {
          "test_name_regex": "AgentFabricSwitchTest.checkFabricConnectivityStats$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.dtlQueueWatermarks$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.reachDiscard$"
        },
        {
          "test_name_regex": "warm_boot.AgentFabricSwitchTest.switchReachability"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.UpdateErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/1.ErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/1.UpdateErspanPortMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].TrucatePortErspanMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolve.*$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk4/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV4[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsAfterResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostTest/[0123].VerifyHostToQueueMappingClassIDsWithResolveBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentPortLedTest.TestLed$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalfHash4X2WideTrunksV4CpuTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalfHash4X2WideTrunksV6CpuTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4FrontPanelTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6FrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk4/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV4[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGParamChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferTest.validatePGHeadroomLimitChange$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.StatNumberOfCounters$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentWatermarkTest.VerifyDeviceWatermarkHigherThanQueueWatermark$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_0$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest.verifyPfcWithMapChanges_1$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithDefaultCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentCoppTest/0.Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        }
    ],
    "leaba/1.42.8/1.42.8/gibraltar/mono": [
        {
          "test_name_regex": "warm_boot.AgentTrunkTest$"
        },
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentAqmWredDropTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxOnly$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.*$"
        },
        {
          "test_name_regex": "AgentRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        }
    ],
    "leaba/1.42.8/1.42.8/gibraltar/multi_switch": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentAqmWredDropTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxOnly$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.*$"
        },
        {
          "test_name_regex": "AgentRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].SpanAclMirror$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].ErspanAclMirror$"
        },
        {
          "test_name_regex": "AgentEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassIDBlock$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "roundtrip.*.AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        }
    ],
    "leaba/24.8.3001/24.8.3001/gibraltar/mono": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentAqmWredDropTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxOnly$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "AgentAclAndDscpQueueMappingTest.VerifyAclAndQosMap$"
        },
        {
          "test_name_regex": "AgentCoppTest/1.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest$"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentL4PortBlackHolingTest.*$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyKbps$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyQueueShaper$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxTx$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        }
    ],
    "leaba/24.8.3001/24.8.3001/gibraltar/multi_switch": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclEmptyCodeIcmp$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatRenameShared$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatCreateMultiple$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatShuffle$"
        },
        {
          "test_name_regex": "AgentHwAclStatTest.AclStatDeleteSharedPostWarmBoot$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentAqmWredDropTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxOnly$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "AgentAclAndDscpQueueMappingTest.VerifyAclAndQosMap$"
        },
        {
          "test_name_regex": "AgentCoppTest/1.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest$"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentL4PortBlackHolingTest.*$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyKbps$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyQueueShaper$"
        },
        {
          "test_name_regex": "AgentTrafficPauseTest.verifyPauseRxTx$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowlet.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentIngressEgress.*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest.*$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentEcmpTestWithWBWrites.L2ResolveOneNhopThenLinkDownThenUp$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentSflowMirrorWithLineRateTrafficTest.VerifySflowEgressCongestion$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentIngressBufferTest.validatePGQueueChanges$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.cold_boot.AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        },
        {
          "test_name_regex": "roundtrip.preprod_2_trunk_2_preprod.warm_boot_for_warm_boot.0.AgentEmptyTest.CheckInit.AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningAndNeighborResolutionTest/[01].learnMacProgramNeighborsAndAgeMac$"
        },
        {
          "test_name_regex": "Agent256WideEcmpTest.WideUcmp256WidthUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpCheckMultipleSlotUnderflow$"
        },
        {
          "test_name_regex": "AgentWideEcmpTest.WideUcmpUnderflow$"
        }
    ],
    "leaba/24.8.3001_yuba/24.8.3001_yuba/graphene200/mono": [
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X2WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV4MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsPhpFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentTrunkLoadBalancerTest.ECMPFullTrunkHalf4X3WideTrunksV6MplsSwapFrontPanelTraffic$"
        },
        {
          "test_name_regex": "AgentCoppTest/1.UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastTxFromCpu$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.VerifyMacAgingScale$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.VerifyMacLearningAgingReleaseResource$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.VerifyMacLearningUpdateExistingL2Entry$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithScaleCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroPgHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest/AgentTrafficPfcGenTest.verifyPfc/WithZeroGlobalHeadRoomCfg$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyBufferPoolWatermarks$"
        },
        {
          "test_name_regex": "AgentTrafficPfcWatchdogTest.*$"
        },
        {
          "test_name_regex": "AgentTrafficPfcTest.verifyIngressPriorityGroupWatermarks$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySP$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySPPreemptionCPUTraffic$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRR$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRAndICP$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRAndNC$"
        },
        {
          "test_name_regex": "warm_boot.AgentOlympicQosSchedulerTest.VerifyOlympicV2WRRToAllSPTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "warm_boot.AgentOlympicQosSchedulerTest.VerifyWRRToAllSPTraffic$"
        },
        {
          "test_name_regex": "warm_boot.AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp4Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIcmp6Qualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp4TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclIp6TcpQualifiers$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclModifyQualifier$"
        },
        {
          "test_name_regex": "AgentHwAclQualifierTest.AclVlanIDQualifier$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].AddPendingEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].AddPendingRemovedEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].LinkDownAndUpOnResolvedEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].LinkDownOnResolvedEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].RemoveResolvedEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].ResolvePendingEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].ResolvePendingEntryThenChangeLookupClass$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].ResolveThenUnresolveEntry$"
        },
        {
          "test_name_regex": "AgentNeighborTest/[13].UnresolveResolvedEntry$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].VerifySampledPacket$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV6.verifyL4SrcPortRandomization$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].VerifySampledPacketRate$"
        },
        {
          "test_name_regex": "AgentAclAndDscpQueueMappingTest.VerifyAclAndQosMap$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.l3ForwardedPkt$"
        },
        {
          "test_name_regex": "AgentHundredThousandRouteScaleTest.hundredThousandRouteScaleTest$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.aclStats$"
        },
        {
          "test_name_regex": "AgentHwResourceStatsTest.l3Stats$"
        },
        {
          "test_name_regex": "AgentIngressBufferPoolTest.validateIngressPoolParamChange$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.ArpRequestFloodTest$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.NdpFloodTest$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyQueueShaper$"
        },
        {
          "test_name_regex": "AgentPrbsTest.disablePortPrbs$"
        },
        {
          "test_name_regex": "AgentPrbsTest.enablePortPrbs$"
        },
        {
          "test_name_regex": "AgentRouteTest/[01].StaticIp2MplsRoutes$"
        },
        {
          "test_name_regex": "AgentSendPacketToQueueTest.SendPacketOutOfPortToMCQueue$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyDeviceWatermark$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppTest/1.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentHgridUuRouteScaleTest.hgridUuScaleTest$"
        },
        {
          "test_name_regex": "AgentHgridDuRouteScaleTest.hgridDuScaleTest$"
        },
        {
          "test_name_regex": "AgentThAlpmRouteScaleTest.thAlpmScale$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.VerifyMacMoveForPort$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifySingleWRRAndNC$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentTunnelMgrTest.*$"
        }
    ]
  }
}